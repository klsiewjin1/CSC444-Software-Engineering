<!DOCTYPE html>
<html>
  <head>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
        width: 75%;
        float: right;
      }
      
      #panel{
        height: 100%;
        width: 25%;
        float: left;
      }
      
      #list{
        height: 58%;
        width: 100%;
        overflow-y: scroll;
        overflow-x: hidden;
      }
      
      #searchWrapper {
        text-align: center;
      }
      
      #serviceSelect {
        width 20%;
      }
      
      h4 {
        text-align: center;
      }
      
      ul { list-style: none; }
      ul li {display:block; text-decoration:none; color:#000000; background-color:#FFFFFF; line-height:30px;
        border-bottom-style:solid; border-bottom-width:1px; border-bottom-color:#CCCCCC; padding-left:5px; cursor:pointer; }
      ul li:hover { background-color: #DCDCDC; }
      
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      
    .slidecontainer {
      width: 85%;
     margin-left: 10px;
    }
    
    .slidecontainer p {
      text-align: center;
    }

  .slider {
      -webkit-appearance: none;
      width: 100%;
      height: 15px;
      border-radius: 5px;
      background: #d3d3d3;
      outline: none;
      opacity: 0.7;
      -webkit-transition: .2s;
      transition: opacity .2s;
  }
  
  .slider:hover {
      opacity: 1;
  }
  
  .slider::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 25px;
      height: 25px;
      border-radius: 50%;
      background: #4CAF50;
      cursor: pointer;
  }
  
  .slider::-moz-range-thumb {
      width: 25px;
      height: 25px;
      border-radius: 50%;
      background: #4CAF50;
      cursor: pointer;
  }
    
    </style>
  </head>
  
    <script>
	  var geocoder;
    var map;
    var address = "<%= get_full_address(@current_user) %>";
    var markers = [];
    var infowindows = [];
    var lastInfoWindow = null;
    var latlng = null;
    var circle = null;
    
    const ONE_KM_ZOOM = 15;
    const TWO_KM_ZOOM = 14;
    const THREE_KM_ZOOM = 14;
	
      function initMap() {
        geocoder = new google.maps.Geocoder();
        latlng = new google.maps.LatLng(<%=@current_user.lat %>, <%=@current_user.long%>);
        var myOptions = {
        		  zoom: ONE_KM_ZOOM,
        		  center: latlng, // init position
        		  mapTypeControl: true,
        		  mapTypeControlOptions: {
        			style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
		          },
          		navigationControl: true,
          		mapTypeId: google.maps.MapTypeId.ROADMAP,
              gestureHandling: 'greedy' // makes the map scroll by click+drag and arrow buttons, need to use scrollbar on side if you want to actually scroll the page down
        };

	        map = new google.maps.Map(document.getElementById("map"), myOptions);
	        // Limit the zoom level
	        var minZoomLevel = THREE_KM_ZOOM;
          google.maps.event.addListener(map, 'zoom_changed', function() {
             if (map.getZoom() < minZoomLevel) map.setZoom(minZoomLevel);
          });
          
	        google.maps.event.addListenerOnce(map, 'idle', function(){
              var infowindow = new google.maps.InfoWindow({
                content: '<b>Your Address: ' + address + '</b>',
                size: new google.maps.Size(150, 50)
              });
    
    		      var image = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png';
              var marker = new google.maps.Marker({
                position: latlng,
                map: map,
                title: address,
    			      animation: google.maps.Animation.DROP,
    			      icon: image
              });
              
              marker.addListener('click', function() {
               infowindow.open(map, marker);
               handleInfoWinClose(infowindow);
              });
              // var ul = document.getElementById("list");
              // ul.style.height = map.getDiv().offsetHeight;
    
              setupDataForMap(1, 0, []);
          });

          map.setCenter(latlng);
}

function encodeServiceNames(serviceNames) {
  var serviceNamesURL = "";
  for (var i = 0; i < serviceNames.length; i++) {
    if(i != serviceNames.length -1){
       serviceNamesURL += serviceNames[i] + ",";
    }else{
       serviceNamesURL += serviceNames[i];
    }
  }
  return encodeURI(serviceNamesURL);
}

function setupDataForMap(radius, minRate, serviceNames) {
        resetMap();
  
        var radiuscircle = (radius / 6378.1) * 6378100;
        if(circle != null) {
          circle.setMap(null);
        }
		    circle = new google.maps.Circle({
            center: latlng,
            clickable: false,  
            draggable: false,
            editable: false,
            fillColor: '#004de8',
            fillOpacity: 0.27,
            map: map,
            radius: radiuscircle,
            strokeColor: '#004de8',
            strokeOpacity: 0.62,
            strokeWeight: 1,
        });
      
      setZoom(radius);
  
      console.log("Fetching listings near you...");
      var xmlhttp = new XMLHttpRequest();
      var jsonResp = null;
      xmlhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
              jsonResp = JSON.parse(this.responseText);
              console.log(jsonResp);
              // draw all client markers around the user
              for (var i = 0; i < jsonResp.listings.length; i++) {
                listing = jsonResp.listings[i];
                console.log('Plotting client: ' + listing);
                
                var clientPos = new google.maps.LatLng(listing.lat, listing.lon);
                
                markers[i] = new google.maps.Marker({
                      position: clientPos,
                      title: listing.address,
                      animation: google.maps.Animation.DROP
                    });
        
                infowindows[i] = new google.maps.InfoWindow({
                    content: appendAllElemToNode(document.createElement("div"), getListingElements(listing)),
                    size: new google.maps.Size(150, 50)
                });
                
                
              listenMarker(markers[i], i);
            
                // clientMarker.addListener('click', function() {
                //   clientInfoWindow.open(map, clientMarker);
                // });
              }
              
              setupList(jsonResp);
              document.getElementById("search").style.cursor = 'pointer';
              document.body.style.cursor = 'default';
              document.getElementById("search").onclick = searchClicked;
          };
      }
  
      var url = "/nearme.json?radius=" + radius +"&minRate="+ minRate +"&serviceNames=" + encodeServiceNames(serviceNames);
      console.log(url);
      xmlhttp.open("GET", url, true);
      xmlhttp.send();
}

function setZoom(rad){
  if(rad == 1){
     map.setZoom(ONE_KM_ZOOM); 
     return;
  }
  if(rad == 2){
     map.setZoom(TWO_KM_ZOOM); 
     return;
  }
  if(rad == 3){
     map.setZoom(THREE_KM_ZOOM); 
     return;
  }
}

function resetMap() { 
  for(var i = 0; i < markers.length; i++){
    markers[i].setMap(null);
    infowindows[i].setMap(null);
  }
  markers = [];
  infowindows = [];
  lastInfoWindow = null;
  map.setCenter(latlng);
}

function appendAllElemToNode(node, elems) {
  for (var x = 0; x < elems.length; x++) {
       node.appendChild(elems[x]);
  }
  
  return node;
}

function listItemClick(i) {
  map.setCenter(markers[i].getPosition());
  new google.maps.event.trigger( markers[i], 'click' );
}

function setupList(jsonData) {
  var ul = document.getElementById("list");
  ul.innerHTML = '';
  
  for (var i = 0; i < jsonData.listings.length; i++) {
     listing = jsonData.listings[i];
     var li = document.createElement("li");
     (function (i)
        {
         li.addEventListener("click", function() {
           listItemClick(i);
         });
     })(i);
     
     var items = getListingElements(listing);
     
     appendAllElemToNode(li, items);
     
     ul.appendChild(li);
  }
  
  // window.setTimeout(function() {
  //   for (var i = 0; i < jsonData.listings.length; i++) {
  //       markers[i].setAnimation(null);
  //   }
  // }, 3000);
}



function getListingElements(listing) {
     var items = [];
     var addr = createListItem("h2", listing.address);
     items.push(addr);
     
     for (var j = 0; j < listing.services.length; j++) {
       var service = listing.services[j];
       
       var serviceItem = getNewTabLink(service.link, service.serviceName);
       
       var serviceRate = createListItem("p", "$" + service.rate + "/hr");
       serviceItem.appendChild(serviceRate);
       
       items.push(serviceItem);
     }
     
    // items.push(createListItem("hr", ""));
     
     var rating = getRatingElement(listing.rating);
     rating.style.marginTop = "20px";
     items.push(rating);
    
     items.push(getNewTabLink(listing.clientPage, "View Client Profile"));
     var directionLink = "https://www.google.com/maps/dir/?api=1&origin=" + encodeURI(address) + "&destination=" + encodeURI(listing.address) + "&travelmode=walking";
     items.push(getNewTabLink(directionLink, "Directions"));
     return items;
}

function getNewTabLink(url, text) {
     var linkP = createListItem("p", "");
     var link = createListItem("a", text);
     link.href = url;
     link.target="_blank"
     linkP.appendChild(link);
     return linkP;
}

function getRatingElement(rating) {
  if (rating == -1) {
    return createListItem("h5", "Client Not Yet Rated");
  }
  return createListItem("h5", "Client Rating: " + rating + " / 5");
}

function createListItem(htmlElemName, innerText){
     var element = document.createElement(htmlElemName);
     element.innerHTML = innerText;
     return element;
}

function listenMarker (marker, i)
{
    markers[i].addListener('click', function() {
         infowindows[i].open(map, markers[i]);
         handleInfoWinClose(infowindows[i]);
    });
    
    window.setTimeout(function() {
      markers[i].setMap(map);
    }, i * 25);
}

function handleInfoWinClose(iwindow) {
  if(lastInfoWindow != null & lastInfoWindow != iwindow){
    lastInfoWindow.close();
  }
  lastInfoWindow = iwindow;
}


    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAP_IzvS1mpKPgcs6meWzc6hu9PB0CVJFs&callback=initMap"
  type="text/javascript"></script>

  
  <body>
    
    <div id="map"><div class="loader"></div></div>
    
    <div id="panel">
        <div class="slidecontainer">
          <input type="range" min="1" max="3" value="1" class="slider" id="myRange">
          <p>Search Radius: <span id="demo"></span></p>
        </div>
        <hr>
         <div class="slidecontainer">
          <input type="range" min="1" max="25" value="5" class="slider" id="rateSlider">
          <p>Minimum Hourly Rate $ <span id="rate">5</span>/hr</p>
        </div>
        <hr>
        <h4>Filter By Service (Ctrl + Click)</h4>
        <select id="serviceSelect" name="cars" multiple>
          <% @service_names.each do |service| %>
            <option value="<%= service.name %>"><%= service.name %></option>
          <% end %>
        </select>
        <div id="searchWrapper"><button id="search" onclick="searchClicked()">Search</button></div>
       
        
        <ul id="list"></ul>
    </div>
  </body>
  <script>
    var slider = document.getElementById("myRange");
    var output = document.getElementById("demo");
    output.innerHTML = slider.value;
    
    slider.oninput = function() {
      output.innerHTML = this.value;
    }
    
    var slider2 = document.getElementById("rateSlider");
    var output2 = document.getElementById("rate");
    
    slider2.oninput = function() {
      output2.innerHTML = this.value;
    }
    
    function searchClicked() {
      document.getElementById("search").onclick = null;
      console.log("Radius: " + slider.value);
      console.log("Rate: " + slider2.value);
      console.log("Services: " + $('#serviceSelect').val());
      document.body.style.cursor = 'progress';
      document.getElementById("search").style.cursor = 'progress';
      setupDataForMap(slider.value, slider2.value, $('#serviceSelect').val());
    }
  </script>
</html>