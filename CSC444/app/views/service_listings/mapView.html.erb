<!DOCTYPE html>
<html>
  <head>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
        width: 75%;
        float: right;
      }
      
      #panel{
        height: 100%;
        width: 25%;
        float: left;
      }
      
      #serviceList{
        height: 100%;
        width: 100%;
        overflow-y: scroll;
        overflow-x: hidden;
      }
      
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    
    </style>
  </head>
  
    <script>
	  var geocoder;
    var map;
    var address = "75 Portland Street, Toronto, Canada";
    var markers = [];
    var infowindows = [];
    var lastInfoWindow = null;
	
      function initMap() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(<%=@current_user.lat %>, <%=@current_user.long%>);
        var myOptions = {
        		  zoom: 15,
        		  center: latlng, // init position
        		  mapTypeControl: true,
        		  mapTypeControlOptions: {
        			style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
		          },
          		navigationControl: true,
          		mapTypeId: google.maps.MapTypeId.ROADMAP,
              gestureHandling: 'greedy' // makes the map scroll by click+drag and arrow buttons, need to use scrollbar on side if you want to actually scroll the page down
        };

	map = new google.maps.Map(document.getElementById("map"), myOptions);
	if (geocoder) {
    geocoder.geocode({
      'address': address
    }, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
          map.setCenter(latlng);

          var infowindow = new google.maps.InfoWindow({
            content: '<b>' + address + '</b>',
            size: new google.maps.Size(150, 50)
          });

		      var image = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png';
          var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            title: address,
			      animation: google.maps.Animation.DROP,
			      icon: image
          });
          
          marker.addListener('click', function() {
           infowindow.open(map, marker);
          });
		
		    radius = 1;
        radius = (radius / 6378.1) * 6378100;
		        circle = new google.maps.Circle({
            center: latlng,
            clickable: false,
            draggable: false,
            editable: false,
            fillColor: '#004de8',
            fillOpacity: 0.27,
            map: map,
            radius: radius,
            strokeColor: '#004de8',
            strokeOpacity: 0.62,
            strokeWeight: 1,
        })

        } else {
          alert("No results found");
        }
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }
  
      console.log("Fetching listings near you...");
      var xmlhttp = new XMLHttpRequest();
      var jsonResp = null;
      xmlhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
              jsonResp = JSON.parse(this.responseText);
              console.log(jsonResp);
          };
      }


      xmlhttp.open("GET", "/nearme.json?radius=1", false);
      xmlhttp.send();

      // draw all client markers around the user
      for (var i = 0; i < jsonResp.listings.length; i++) {
        listing = jsonResp.listings[i];
        console.log('Plotting client: ' + listing);
        
        var clientPos = new google.maps.LatLng(listing.lat, listing.lon);

        markers[i] = new google.maps.Marker({
            position: clientPos,
            map: map,
            title: listing.address,
            animation: google.maps.Animation.DROP
          });

        infowindows[i] = new google.maps.InfoWindow({
            content: '<b>Client is with Lat: ' + listing.lat + ' Lon: ' + listing.lon + '</b>',
            size: new google.maps.Size(150, 50)
        });
        
        
      listenMarker(markers[i], i);
    
        // clientMarker.addListener('click', function() {
        //   clientInfoWindow.open(map, clientMarker);
        // });
      }
      
      setupList(jsonResp);
}

function setupList(jsonData) {
  var ul = document.getElementById("list");
  ul.innerHTML = '';
  
  for (var i = 0; i < jsonData.listings.length; i++) {
     listing = jsonData.listings[i];
     var li = document.createElement("li");
     
     var items = [];
     var address = createListItem("h2", listing.address);
     items.push(address);
     var rating = createListItem("p", "Client Rating: " + listing.rating + " / 5");
     items.push(rating);
     
     for (var j = 0; j < listing.services.length; j++) {
       var service = listing.services[j];
       
       var serviceItem = createListItem("p", "");
       var link = createListItem("a", service.serviceName);
       link.href = service.link;
       serviceItem.appendChild(link);
       
       var serviceRate = createListItem("p", "$" + service.rate + "/hr");
       serviceItem.appendChild(serviceRate);
       
       items.push(serviceItem);
     }
     
     for (var x = 0; x < items.length; x++) {
       li.appendChild(items[x]);
     }
     
     ul.appendChild(li);
  }
}

function createListItem(htmlElemName, innerText){
     var element = document.createElement(htmlElemName);
     element.innerHTML = innerText;
     return element;
}

function listenMarker (marker, i)
{
    markers[i].addListener('click', function() {
         infowindows[i].open(map, markers[i]);
         if(lastInfoWindow != null){
           lastInfoWindow.close();
         }
         lastInfoWindow = infowindows[i];
    });
}
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAP_IzvS1mpKPgcs6meWzc6hu9PB0CVJFs&callback=initMap"
  type="text/javascript"></script>

  
  <body>
    
    <div id="map"></div>
    
    <div id="panel">
      
        <input class="search" placeholder="Search" />
        <button class="sort" data-sort="rating">
          Sort by rating
        </button>
      
        <ul id="list"></ul>
    </div>
  </body>
</html>